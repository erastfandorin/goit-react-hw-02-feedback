{"version":3,"sources":["App/Section/Section.js","App/FeedbackOptions/FeedbackOptions.js","App/Statistics/Statistics.js","App/Notification/Notification.js","App/App.js","index.js","App/App.module.css"],"names":["Section","children","title","prototype","PropTypes","element","isRequired","string","FeedbackOptions","handleClick","style","className","button_feedback","type","name","value","onClick","func","object","Statistics","good","neutral","bad","total","positivePercentage","number","Notification","messageNotification","App","state","target","setState","prevState","countTotalFeedback","Object","values","reduce","accumulator","currentValue","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"uSAGMA,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,oCACE,4BAAKA,GACJD,IAKPD,EAAQG,UAAY,CAClBF,SAAUG,IAAUC,QAAQC,WAC5BJ,MAAOE,IAAUG,OAAOD,YAGXN,QCdTQ,EAAkB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACtC,OACE,oCACE,2BACEC,UAAWD,EAAME,gBACjBC,KAAK,SACLC,KAAK,OACLC,MAAM,OACNC,QAASP,IAEX,2BACEE,UAAWD,EAAME,gBACjBC,KAAK,SACLC,KAAK,UACLC,MAAM,UACNC,QAASP,IAEX,2BACEE,UAAWD,EAAME,gBACjBC,KAAK,SACLC,KAAK,MACLC,MAAM,MACNC,QAASP,MAMjBD,EAAgBL,UAAY,CAC1BM,YAAaL,IAAUa,KAAKX,WAC5BI,MAAON,IAAUc,OAAOZ,YAGXE,QCjCTW,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDACsBC,EAAqB,GAArB,UAA6BA,EAA7B,QAM5BL,EAAWhB,UAAY,CACrBiB,KAAMhB,IAAUqB,OAAOnB,WACvBe,QAASjB,IAAUqB,OAAOnB,WAC1BgB,IAAKlB,IAAUqB,OAAOnB,WACtBiB,MAAOnB,IAAUqB,OAAOnB,WACxBkB,mBAAoBpB,IAAUqB,OAAOnB,YAGxBa,QCtBTO,EAAe,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACtB,OAAO,2BAAIA,IAGbD,EAAavB,UAAY,CACvBwB,oBAAqBvB,IAAUG,OAAOD,YAGzBoB,QCyDAE,E,2MA5DbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,YAAc,YAAiB,IACrBK,EADoB,EAAbgB,OACPhB,KACR,EAAKiB,UAAS,SAAAC,GACZ,OAAO,eACJlB,EAAOkB,EAAUlB,GAAQ,O,EAKhCmB,mBAAqB,WAInB,MAAO,CAAEV,MAHKW,OAAOC,OAAO,EAAKN,OAAOO,QACtC,SAACC,EAAaC,GAAd,OAA+BD,EAAcC,O,EAKjDC,gCAAkC,WAAO,IAC/BnB,EAAS,EAAKS,MAAdT,KACAG,EAAU,EAAKU,qBAAfV,MAER,MAAO,CAAEC,mBADkBgB,KAAKC,MAAOrB,EAAOG,EAAS,O,wEAI/C,IAAD,EACwBmB,KAAKb,MAA5BT,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACfC,EAAUmB,KAAKT,qBAAfV,MACAC,EAAuBkB,KAAKH,kCAA5Bf,mBAKR,OACE,oCACE,kBAAC,EAAD,CAAStB,MANgB,yBAOvB,kBAAC,EAAD,CAAiBO,YAAaiC,KAAKjC,YAAaC,MAAOA,OAEzD,kBAAC,EAAD,CAASR,MARW,cASjBqB,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcG,oBAjBM,4B,GApCdgB,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,gBAAkB,gC","file":"static/js/main.46ce32fc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.prototype = {\r\n  children: PropTypes.element.isRequired,\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ handleClick, style }) => {\r\n  return (\r\n    <>\r\n      <input\r\n        className={style.button_feedback}\r\n        type=\"button\"\r\n        name=\"good\"\r\n        value=\"Good\"\r\n        onClick={handleClick}\r\n      />\r\n      <input\r\n        className={style.button_feedback}\r\n        type=\"button\"\r\n        name=\"neutral\"\r\n        value=\"Neutral\"\r\n        onClick={handleClick}\r\n      />\r\n      <input\r\n        className={style.button_feedback}\r\n        type=\"button\"\r\n        name=\"bad\"\r\n        value=\"Bad\"\r\n        onClick={handleClick}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.prototype = {\r\n  handleClick: PropTypes.func.isRequired,\r\n  style: PropTypes.object.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>\r\n        Positive feedback: {positivePercentage > 0 && `${positivePercentage}%`}\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.prototype = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ messageNotification }) => {\r\n  return <p>{messageNotification}</p>;\r\n};\r\n\r\nNotification.prototype = {\r\n  messageNotification: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport style from \"./App.module.css\";\nimport Section from \"./Section/Section\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Notification from \"./Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  handleClick = ({ target }) => {\n    const { name } = target;\n    this.setState(prevState => {\n      return {\n        [name]: prevState[name] + 1\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const total = Object.values(this.state).reduce(\n      (accumulator, currentValue) => accumulator + currentValue\n    );\n    return { total };\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const { total } = this.countTotalFeedback();\n    const positivePercentage = Math.round((good / total) * 100);\n    return { positivePercentage };\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const { total } = this.countTotalFeedback();\n    const { positivePercentage } = this.countPositiveFeedbackPercentage();\n    const titleFeedbackOptions = \"Please leave feedback\";\n    const titleStatistics = \"Statistics\";\n    const messageNotification = \"No feedback given\";\n\n    return (\n      <>\n        <Section title={titleFeedbackOptions}>\n          <FeedbackOptions handleClick={this.handleClick} style={style} />\n        </Section>\n        <Section title={titleStatistics}>\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification messageNotification={messageNotification} />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_feedback\":\"App_button_feedback__2UAMn\"};"],"sourceRoot":""}